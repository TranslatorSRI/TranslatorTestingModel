BASE <https://w3id.org/TranslatorSRI/test-case-schema/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX linkml: <https://w3id.org/linkml/>
PREFIX schema1: <http://schema.org/>


linkml:String xsd:string

linkml:Integer xsd:integer

linkml:Boolean xsd:boolean

linkml:Float xsd:float

linkml:Double xsd:double

linkml:Decimal xsd:decimal

linkml:Time xsd:time

linkml:Date xsd:date

linkml:Datetime xsd:dateTime

linkml:DateOrDatetime linkml:DateOrDatetime

linkml:Uriorcurie IRI

linkml:Curie xsd:string

linkml:Uri IRI

linkml:Ncname xsd:string

linkml:Objectidentifier IRI

linkml:Nodeidentifier NONLITERAL

linkml:Jsonpointer xsd:string

linkml:Jsonpath xsd:string

linkml:Sparqlpath xsd:string

<Input>  (
    CLOSED {
       (  $<Input_tes> rdf:type . * ;
          rdf:type [ <Input> ] ?
       )
    } OR @<SemanticSmokeTestInput>
)

<Output>  (
    CLOSED {
       (  $<Output_tes> rdf:type . * ;
          rdf:type [ <Output> ] ?
       )
    } OR @<SemanticSmokeTestOutput>
)

<Precondition> CLOSED {
    (  $<Precondition_tes> rdf:type . * ;
       rdf:type [ <Precondition> ] ?
    )
}

<SemanticSmokeTestCase> CLOSED {
    (  $<SemanticSmokeTestCase_tes> (  &<TestCase_tes> ;
          rdf:type [ <TestCase> ] ? ;
          <inputs> @<SemanticSmokeTestInput> + ;
          <outputs> @<SemanticSmokeTestOutput> +
       ) ;
       rdf:type [ <SemanticSmokeTestCase> ]
    )
}

<SemanticSmokeTestInput> CLOSED {
    (  $<SemanticSmokeTestInput_tes> (  &<Input_tes> ;
          rdf:type [ <Input> ] ? ;
          <must_pass_date> @linkml:Date ? ;
          <must_pass_environment> @<EnvironmentEnum> ? ;
          <query> @linkml:String ? ;
          <string_entry> @linkml:String ? ;
          <direction> @<DirectionEnum> ? ;
          <answer_informal_concept> @linkml:String ? ;
          <expected_result> @<ExpectedResultsEnum> ? ;
          <curie> @linkml:Curie ? ;
          <top_level> @linkml:String ? ;
          <node> @linkml:String ? ;
          <notes> @linkml:String ?
       ) ;
       rdf:type [ <SemanticSmokeTestInput> ] ?
    )
}

<SemanticSmokeTestOutput> CLOSED {
    (  $<SemanticSmokeTestOutput_tes> (  &<Output_tes> ;
          rdf:type [ <Output> ] ?
       ) ;
       rdf:type [ <SemanticSmokeTestOutput> ] ?
    )
}

<TestCase>  (
    CLOSED {
       (  $<TestCase_tes> (  schema1:name @linkml:String ? ;
             schema1:description @linkml:String ? ;
             <inputs> @<Input> * ;
             <outputs> @<Output> * ;
             <preconditions> @<Precondition> *
          ) ;
          rdf:type [ <TestCase> ]
       )
    } OR @<SemanticSmokeTestCase>
)

<TestSuite> CLOSED {
    (  $<TestSuite_tes> <entries> @<TestCase> * ;
       rdf:type [ <TestSuite> ] ?
    )
}


