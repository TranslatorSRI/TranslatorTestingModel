---
id: https://w3id.org/TranslatorSRI/test-case-schema
name: test-case-schema
title: test-case-schema
description: |-
  This is the project description.
license: MIT
see_also:
  - https://TranslatorSRI.github.io/test-case-schema

prefixes:
  test_case_schema: https://w3id.org/TranslatorSRI/test-case-schema/
  linkml: https://w3id.org/linkml/
  biolink: https://w3id.org/biolink/
  schema: http://schema.org/
  example: https://example.org/
default_prefix: test_case_schema
default_range: string

imports:
  - linkml:types

classes:

  TestAsset:
  QueryAnswerPair:
    aliases: [""]
  
  TestCase:
    description: >-
      Represents a TestCase
    slots:
      - name
      - id
      - description
      - inputs
      - outputs
      - preconditions
      - persona

  AcceptanceTestCase:
    is_a: TestCase
    description: >-
      Lifting schema from Shervin's runner JSON here as an example.  This schema is not yet complete.
    slot_usage:
      inputs:
        range: SemanticSmokeTestInput
        required: true
      outputs:
        range: SemanticSmokeTestOutput
        required: true

  AcceptanceTestSuite
    is_a: TestSuite
    description:
    slots:
      - test_cases

  BenchmarkTestCase
     is_a: TestCase
     

  Input:
    description: >-
      Represents an input to a TestCase
    slots:

  SemanticSmokeTestInput:
    is_a: Input
    description: >-
      Lifting schema from Shervin's runner JSON here as an example.  This schema is not yet complete.
    slots:
      - must_pass_date
      - must_pass_environment
      - query
      - string_entry
      - direction
      - answer_informal_concept
      - expected_result
      - curie
      - top_level
      - node
      - notes

  Output:
    description: >-
      Represents an output from a TestCase
    slots:


  SemanticSmokeTestOutput:
    is_a: Output
    description: >-
      Lifting schema from Shervin's runner JSON here as an example.  This schema is not yet complete.


  Precondition:
    description: >-
      Represents a precondition for a TestCase
    slots:

  TestSuite:
    tree_root: true
    description: >-
      A holder for TestCase objects
    slots:
      - test_cases
    slot_usage:
      test_cases:
        range: TestCase
        multivalued: true
        inlined: true


slots:

  test_cases:
    range: TestCase
    multivalued: true


  id:
    identifier: true
    slot_uri: schema:identifier
    range: uriorcurie
    description: A unique identifier for a TestCase

  name:
    slot_uri: schema:name
    description: A human-readable name for a TestCase

  description:
    slot_uri: schema:description
    description: A human-readable description for a TestCase

  must_pass_date:
    description: >-
      The date by which this test must pass
    range: date
    examples:
      - value: "2023-09-01"

  must_pass_environment:
    description: >-
      The environment in which this test must pass
    range: EnvironmentEnum
    examples:
      - value: "PROD"
      - value: "CI"
      - value: "TEST"

  query:
    description: >-
      The question a SME would ask
    range: string
    examples:
      - value: "What drugs may treat multiple sclerosis?"
      - value: "What gene is upregulated?"

  string_entry:
    aliases: ["trapi node 2", "disease"]
    description: >-
      The object of the core triple to be tested
    range: string
    examples:
      - value: "multiple sclerosis"
      - value: "Castlemans"

  direction:
    description: >-
      The direction of the expected query result triple
    range: DirectionEnum

  answer_informal_concept:
    description: >-
      An answer that is returned from the test case, note: this must be combined with the expected_result
      to form a complete answer.  It might make sense to couple these in their own object instead of
      strictly sticking to the flat schema introduced by the spreadsheet here: https://docs.google.com/spreadsheets/d/1yj7zIchFeVl1OHqL_kE_pqvzNLmGml_FLbHDs-8Yvig/edit#gid=0
    range: string
    examples:
      - value: "fingolimod"
      - value: "natalizumab"
      - value: "lead"
      - value: "great answer here"

  expected_result:
    description: >-
      The expected result of the query
    range: ExpectedResultsEnum

  curie:
    description: >-
      The curie of the query
    range: curie

  top_level:
    description: >-
      The answer must return in these many results
    range: string

  node:
    description: >-
      The node of the TRAPI query to replace.
    range: string

  notes:
    description: >-
      The notes of the query
    range: string

  requires_trapi:
    range: boolean
    description: >-
      Does this test require a TRAPI-compliant query to run?

  inputs:
    range: Input
    multivalued: true

  outputs:
    range: Output
    multivalued: true

  preconditions:
    range: Precondition
    multivalued: true

enums:
  ExpectedResultsEnum:
    permissible_values:
      include_good:
        description: >-
          The query should return the result in this test case
      exclude_bad:
        description: >-
          The query should not return the result in this test case

  DirectionEnum:
    permissible_values:
      increased:
      decreased:
      
  EnvironmentEnum:
    permissible_values:
      DEV:
      CI:
      TEST:
      PROD:
